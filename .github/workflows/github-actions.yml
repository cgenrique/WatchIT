name: Run Tests and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            docker-ce docker-ce-cli containerd.io
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to GitHub Docker Registry
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
        run: echo "${CR_PAT}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        working-directory: .
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/watchit:latest -f Dockerfile .

      - name: Push Docker Image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository_owner }}/watchit:latest

      - name: Set up Docker Compose
        run: |
          docker compose up -d
          sleep 10

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Set environment variable for tests
        run: |
          echo "TEST_ENV=true" >> $GITHUB_ENV

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/

      - name: Tear down Docker Compose
        if: always()
        run: docker compose down
